/*
A string is good if there are no repeated characters.
Given a string s​​​​​, return the number of good substrings of length three in s​​​​​​.
Note that if there are multiple occurrences of the same substring, every occurrence should be counted.
A substring is a contiguous sequence of characters in a string.

Example 1:
Input: s = "xyzzaz"
Output: 1
Explanation: There are 4 substrings of size 3: "xyz", "yzz", "zza", and "zaz". 
The only good substring of length 3 is "xyz".
*/


class Solution {
public:
    int countGoodSubstrings(string s) {
        if(s.size()<3){
            return 0;
        }

        char a,b,c;
        int n;
        
        map<char,int> mp;

        int i = 0 , j = 0;
        int ans = 0;

        while(j < s.size()){
            mp[s[j]]++;
            if(j-i+1<3){
                j++;
            }
            else if(j-i+1==3){
                if(mp.size() == 3){
                    ans++;
                }
                mp[s[i]]--;
                if(mp[s[i]]==0){
                    mp.erase(s[i]);
                }
                i++;
                j++;

            }
        }
        return ans;
    }
};
