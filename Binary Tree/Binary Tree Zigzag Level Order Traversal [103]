/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        
        vector<vector<int>> ans;

        if(root == nullptr){
            return ans;
        }

        queue<TreeNode*> q;
        q.push(root);
        bool flag = true;
        while(!q.empty()){
            vector<int> v;
            
            int level = q.size();
            
            for(int i = 0 ; i < level ; i++){
                TreeNode* temp = q.front();
                q.pop();
                if(temp->left){
                    q.push(temp->left);
                }
                if(temp->right){
                    q.push(temp->right);
                }

// the way of adding elements is switched on the basis of the flag variable

                if(flag == false){
                    v.insert(v.begin(), temp->val);
                }else{
                    v.push_back(temp->val);
                }
            }
            flag = !flag;
            ans.push_back(v);
        }
        return ans;
    }
};
