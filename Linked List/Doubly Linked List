/*
 * Definition for doubly-linked list.
 * class Node
 * {
 * public:
 *    int data;
 *    Node *next, *prev;
 *    Node() : data(0), next(nullptr), prev(nullptr) {}
 *    Node(int x) : data(x), next(nullptr), prev(nullptr) {}
 *    Node(int x, Node *next, Node *prev) : data(x), next(next), prev(prev) {}
 * };
 */

Node* constructDLL(vector<int>& arr) {
    if (arr.empty()) {
        return nullptr;
    }

    Node* head = new Node(arr[0]);
    Node* last = head;

    int n = arr.size();
    for(int i = 1; i < n; i++) {
        Node* t = new Node(arr[i]);
        t->prev = last;
        t->next = nullptr;
        last->next = t;
        last = t;
    }
    
    return head;
}

