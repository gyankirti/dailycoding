/*
Problem statement
You have been given a sorted array/list of integers 'arr' of size 'n' and an integer 'x'.
Find the total number of occurrences of 'x' in the array/list.
Example:
Input: 'n' = 7, 'x' = 3
'arr' = [1, 1, 1, 2, 2, 3, 3]
*/


int BSL(vector<int>& nums, int target){
        int low = 0 , high = nums.size()-1;
        int ans = -1;
        while(low<=high){
            int mid = low + (high-low)/2;
            if(nums[mid] == target){
                ans = mid;
                high = mid - 1 ;
            }
            else if(nums[mid]>target){
                high =  mid - 1;
            }
            else if(nums[mid] < target){
                low = mid +1;
            }

        }
        
        return ans;

    }
    int BSR(vector<int>& nums, int target){
        int low = 0 , high = nums.size()-1;
        int ans = -1;
        while(low<=high){
            int mid = low + (high-low)/2;
            if(nums[mid] == target){
                ans = mid;
                low = mid + 1 ;
            }
            else if(nums[mid]>target){
                high =  mid - 1;
            }
            else if(nums[mid] < target){
                low = mid +1;
            }

        }
        
        return ans;
    }

int count(vector<int>& arr, int n, int x) {
	int l = BSL(arr,x);
    int r = BSR(arr,x);
	if(r == -1 or l == -1){
        return 0;
    }
    else{
        return r-l+1;
    }
}
