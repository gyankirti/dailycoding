/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxLevelSum(TreeNode* root) {

        if(!root){
            return 0;
        }

        vector<int> level_sum;
        queue<TreeNode*> q;
        q.push(root);
        level_sum.push_back(root->val);
        while(!q.empty()){
            int n = q.size();
            int sum = 0;
            while(n--){
                TreeNode* temp = q.front();
                q.pop();
                sum += temp->val;
                if(temp->left){
                    q.push(temp->left);
                }
                if(temp->right){
                    q.push(temp->right);
                }
            }
            level_sum.push_back(sum);
        }

        int max = INT_MIN ;
        int max_level = 1;

        for(int i = 0 ; i < level_sum.size() ; i++){
            if(level_sum[i]>max){
                max=level_sum[i];
                max_level = i+1 ;
            }
        }
        return max_level;
    }
};
