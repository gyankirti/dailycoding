class Solution {
public:
   vector<int> vis;
   
   void dfs(vector<vector<int>>& isConnected, int i) {
      if (vis[i]) return;
      vis[i] = 1;
      for (int j = 0; j < isConnected.size(); j++) {
         if (isConnected[i][j] == 1) {
            dfs(isConnected, j);
         }
      }
   }

   int findCircleNum(vector<vector<int>>& isConnected) {
       int n = isConnected.size();
       vis.resize(n, 0);
       int ans = 0;
       
       for (int i = 0; i < n; i++) {
           if (!vis[i]) {
               ans++;
               dfs(isConnected, i);
           }
       }
       return ans;
   }
};
