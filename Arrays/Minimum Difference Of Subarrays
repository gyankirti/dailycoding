/*
 Problem statement
You are given an array 'ARR' that consists of ‘N’ numbers. Your task is to split the array into two non-empty subarrays such that the absolute difference between their sum is minimum. For example,
If the given array is [6,7,1,8,5]. We can split the array into [6,7,1] and [8,5].
Hence the answer will be |14-13| = 1 which is minimum.
*/


int minimumDifference(int n, vector<int> arr)
{
    int sum = 0;
    for(int i = 0; i<n; i++){
        sum += arr[i];
    }
    int s= 0, j = 0;
    int mini = INT_MAX;
    while(j<n){
        s+=arr[j];
        int a = sum-s;
        int b = abs(s-a);
        mini = min(mini,b);
        j++;
    }
    return mini;
}
